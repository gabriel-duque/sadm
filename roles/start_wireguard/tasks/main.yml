---

- name: Generate WireGuard's dynamic configuration for Traefik
  template:
    src: 'wireguard.toml.j2'
    dest: "{{ services.volumes.src.base }}\
           {{ services.volumes.src.generated }}\
           {{ services.containers.traefik.volumes.dynamic.path }}\
           /wireguard.toml"
    mode: '0444'

- name: Install WireGuard and QRencode on host
  apt:
    autoclean: true
    autoremove: true
    state: latest
    pkg:
      - wireguard
      - qrencode

- name: Generate server config
  template:
    src: 'server.conf.j2'
    dest: "{{ services.volumes.src.base }}\
           {{ services.volumes.src.generated }}\
           {{ services.containers.wireguard.volumes.config.path }}\
           /wg-sadm.conf"
    mode: '0400'
  notify: Restart WireGuard container

- name: Generate client configs
  template:
    src: 'client.conf.j2'
    dest: "{{ services.volumes.src.base }}\
           {{ services.volumes.src.generated }}\
           {{ services.containers.wireguard.volumes.config.path }}\
           /{{ item.name }}.conf"
    mode: '0400'
  loop: '{{ secrets.wireguard.peers }}'
  loop_control:
    label: '{{ item.name }}'
  notify: Restart WireGuard container

- name: Start WireGuard container
  community.docker.docker_container:
    capabilities:
      - net_admin
      - sys_module
    container_default_behavior: 'no_defaults'
    detach: true
    hostname: '{{ services.containers.wireguard.name }}'
    image: '{{ services.containers.wireguard.image }}'
    log_driver: '{{ services.log.driver }}'
    log_options: '{{ services.log.options }}'
    mounts:
      - type: bind
        source: "{{ services.volumes.src.base }}\
                 {{ services.volumes.src.generated }}\
                 {{ services.containers.wireguard.volumes.config.path }}"
        target: '{{ services.volumes.dest.base }}'
        read_only: true
      - type: bind
        source: '/lib/modules'
        target: '/lib/modules'
        read_only: true
    name: '{{ services.containers.wireguard.name }}'
    networks:
      - name: '{{ services.network }}'
        aliases:
          - '{{ services.containers.wireguard.name }}'
    networks_cli_compatible: false
    pull: true
    purge_networks: true
    restart_policy: unless-stopped
