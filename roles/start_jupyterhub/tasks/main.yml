---

- name: Generate JupyterHub's dynamic configuration for Traefik
  template:
    src: 'jupyterhub.toml.j2'
    dest: "{{ services.volumes.src.base }}\
           {{ services.volumes.src.generated }}\
           {{ services.containers.traefik.volumes.dynamic.path }}\
           /jupyterhub.toml"
    mode: '0444'

- name: Create directories for JupyterHub users
  file:
    path: "{{ services.volumes.src.base }}\
           {{ services.volumes.src.persistent }}\
           {{ services.containers.jupyterhub.volumes.data.path }}/{{ item }}"
    state: directory
    owner: '1000'
    group: '100'
    mode: '{{ item.mode | default("0700", true) }}'
  loop: '{{ services.containers.jupyterhub.users }}'

- name: Start JupyterHub container
  community.general.docker_container:
    container_default_behavior: 'no_defaults'
    detach: true
    env:
      ADMIN_USER: '{{ services.containers.jupyterhub.admin }}'
      DEFAULT_IMAGE: '{{ services.containers.jupyterhub.notebook_image }}'
      GITLAB_URL: 'https://gitlab.{{ setup.tld }}'
      HUB_CONNECT_IP: '{{ services.containers.jupyterhub.name }}'
      NETWORK_NAME: '{{ services.network }}'
      OAUTH_CALLBACK_URL: "https://jupyterhub.{{ setup.tld }}\
                           /hub/oauth_callback"
      OAUTH_CLIENT_ID: '{{ secrets.jupyterhub.client_id }}'
      OAUTH_CLIENT_SECRET: '{{ secrets.jupyterhub.client_secret }}'
      USER_HOME_DIR: "{{ services.volumes.src.base }}\
                      {{ services.volumes.src.persistent }}\
                      {{ services.containers.jupyterhub.volumes.data.path }}"
    hostname: '{{ services.containers.jupyterhub.name }}'
    image: '{{ services.containers.jupyterhub.image }}'
    log_driver: '{{ services.log.driver }}'
    log_options: '{{ services.log.options }}'
    mounts:
      - type: bind
        source: '/var/run/docker.sock'
        target: '/var/run/docker.sock'
        read_only: false
    name: '{{ services.containers.jupyterhub.name }}'
    networks:
      - name: '{{ services.network }}'
        aliases:
          - '{{ services.containers.jupyterhub.name }}'
    networks_cli_compatible: false
    pull: true
    purge_networks: true
    restart_policy: unless-stopped
